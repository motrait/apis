{
  "swagger": "2.0",
  "info": {
    "title": "motrait/product/v1/product.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ProductService"
    },
    {
      "name": "SuiteService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/Suites": {
      "get": {
        "operationId": "SuiteService_ListSuites",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSuitesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "keywords",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "The maximum number of items to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "The next_page_token value returned from a previous List request, if any.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "SuiteService"
        ]
      },
      "post": {
        "operationId": "SuiteService_CreateSuite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Suite"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "Suite",
            "description": "The Suite resource to create.\nThe field name should match the Noun in the method name.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EditSuite"
            }
          }
        ],
        "tags": [
          "SuiteService"
        ]
      }
    },
    "/v1/products": {
      "get": {
        "operationId": "ProductService_ListProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListProductsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "keywords",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "description": "The maximum number of items to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "The next_page_token value returned from a previous List request, if any.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProductService"
        ]
      },
      "post": {
        "operationId": "ProductService_CreateProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Product"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "Product",
            "description": "The Product resource to create.\nThe field name should match the Noun in the method name.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EditProduct"
            }
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    },
    "/v1/{id_1}": {
      "get": {
        "operationId": "SuiteService_GetSuite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Suite"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id_1",
            "description": "The field will contain name of the resource requested.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "Suites/[^/]+"
          }
        ],
        "tags": [
          "SuiteService"
        ]
      },
      "delete": {
        "operationId": "SuiteService_DeleteSuite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id_1",
            "description": "The resource name of the Suite to be deleted.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "Suites/[^/]+"
          }
        ],
        "tags": [
          "SuiteService"
        ]
      },
      "patch": {
        "operationId": "SuiteService_UpdateSuite",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Suite"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id_1",
            "description": "Suite ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Suite",
            "description": "The Suite resource which replaces the resource on the server.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EditSuite"
            }
          }
        ],
        "tags": [
          "SuiteService"
        ]
      }
    },
    "/v1/{id}": {
      "get": {
        "operationId": "ProductService_GetProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Product"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The field will contain name of the resource requested.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "Products/[^/]+"
          }
        ],
        "tags": [
          "ProductService"
        ]
      },
      "delete": {
        "operationId": "ProductService_DeleteProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "The resource name of the Product to be deleted.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "Products/[^/]+"
          }
        ],
        "tags": [
          "ProductService"
        ]
      },
      "patch": {
        "operationId": "ProductService_UpdateProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Product"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Product ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Product",
            "description": "The Product resource which replaces the resource on the server.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1EditProduct"
            }
          }
        ],
        "tags": [
          "ProductService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1EditProduct": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "Product name"
        },
        "description": {
          "type": "string",
          "title": "Product description"
        },
        "videoUrl": {
          "type": "string",
          "title": "Product video url"
        },
        "pageMeta": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PageMeta"
          },
          "title": "Product page meta"
        },
        "attributes": {
          "type": "object",
          "title": "A Key value store defines Product custom attributes"
        },
        "price": {
          "$ref": "#/definitions/v1Price",
          "title": "Product price"
        },
        "discount": {
          "type": "integer",
          "format": "int32",
          "title": "Discount"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Product categories"
        }
      }
    },
    "v1EditSuite": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "title": "Suite's Suites Name"
        },
        "description": {
          "type": "string",
          "title": "Suite's Suites Description"
        },
        "pageMeta": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PageMeta"
          },
          "title": "Page Meta"
        },
        "ProductIDs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Suite ID packed in this Suites"
        },
        "attributes": {
          "type": "object",
          "title": "A key value store defines suites custom attributes"
        },
        "discount": {
          "type": "integer",
          "format": "int32",
          "title": "Discount"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Product categories"
        }
      }
    },
    "v1ListProductsResponse": {
      "type": "object",
      "properties": {
        "Products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Product"
          },
          "description": "The field name should match the noun \"Product\" in the method name.\nThere will be a maximum number of items returned based on the page_size field in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "v1ListSuitesResponse": {
      "type": "object",
      "properties": {
        "Suites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Suite"
          },
          "description": "The field name should match the noun \"Suite\" in the method name.\nThere will be a maximum number of items returned based on the page_size field in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "v1PageMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1Price": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        }
      }
    },
    "v1Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Product ID"
        },
        "title": {
          "type": "string",
          "title": "Product name"
        },
        "description": {
          "type": "string",
          "title": "Product descriptrion"
        },
        "videoUrl": {
          "type": "string",
          "title": "Product video URL that can be embeded"
        },
        "pageMeta": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PageMeta"
          },
          "title": "Product page meta"
        },
        "attributes": {
          "type": "object",
          "title": "A Key value store defines Product custom attributes"
        },
        "price": {
          "$ref": "#/definitions/v1Price",
          "title": "Product price"
        },
        "discount": {
          "type": "integer",
          "format": "int32",
          "title": "Discount"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Product categories"
        },
        "createdAt": {
          "type": "string",
          "title": "Product created date"
        },
        "updatedAt": {
          "type": "string",
          "title": "Product updated date"
        }
      }
    },
    "v1Suite": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Suite's Suites ID"
        },
        "title": {
          "type": "string",
          "title": "Suite's Suites Name"
        },
        "description": {
          "type": "string",
          "title": "Suite's Suites Description"
        },
        "pageMeta": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PageMeta"
          },
          "title": "Page Meta"
        },
        "ProductIDs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Suite ID packed in this Suites"
        },
        "attributes": {
          "type": "object",
          "title": "A key value store defines suites custom attributes"
        },
        "discount": {
          "type": "integer",
          "format": "int32",
          "title": "Discount"
        },
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Product categories"
        },
        "createdAt": {
          "type": "string",
          "title": "Created date"
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated date"
        }
      }
    }
  }
}
